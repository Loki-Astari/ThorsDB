name:       Build
run-name:   ${{ github.actor }} Building
on:         [push]
env:
    HOMEBREW_NO_AUTO_UPDATE:    1
jobs:
    Build_on_Mac:
        runs-on:    macos-latest
        steps:
            - uses: actions/checkout@master
              with:
                    submodules: recursive
                    token: ${{ secrets.GITHUB_TOKEN }}
            - name: Setup Dependencies
              run: |
                    brew install mongosh
                    brew install vera++
                    brew install thors-serializer
                    brew install boost
                    brew install snappy
                    brew install magic_enum
            - name: Start MySQL
              uses: ankane/setup-mysql@v1
            - name: Start Postgres
              uses: ankane/setup-postgres@v1
              with:
                    database: testdb
            - name: Start Mongo
              uses: ankane/setup-mongodb@v1
            - name: Set up Test Data
              run: |
                    cat ./src/MySQL/test/data/init.sql | mysql -B --user=root
                    cat ./src/MySQL/test/data/data.sql | mysql -B --user=test --password=testPassword test
                    pwd
                    psql -d testdb --file=./src/Postgres/test/data/init.sql
                    cat ./src/Mongo/test/data/init.mongo | mongosh --verbose
                    cat ./src/Mongo/test/data/data.mongo | mongosh --verbose -u test -p testPassword test
            - name: Build
              run: |
                    rootPath=$(brew config | awk '/HOMEBREW_PREFIX/ {print $2}')
                    cellPath=$(brew info --json openssl | jq -r '.[0].name + "/" + .[0].versions.stable')
                    openSSLPath=$(echo ${rootPath}/Cellar/${cellPath} | sed -e 's/@/\@/')
                    echo "openSSLPath: ${openSSLPath}"
                    ./configure --disable-colour --without-timegm --without-modtests --with-crypto-root=${openSSLPath} --disable-test-with-postgres-auth --disable-test-with-mongo-query
                    make
    Build_on_Linux:
        runs-on:    ubuntu-latest
        steps:
            - uses: actions/checkout@master
              with:
                    submodules: recursive
                    token: ${{ secrets.GITHUB_TOKEN }}
            - name: Setup Dependencies
              run: |
                    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
                    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
                    brew install mongosh
                    brew install vera++
                    brew install thors-serializer
                    brew install boost
                    brew install snappy
                    brew install magic_enum
            - name: Start MySQL
              uses: ankane/setup-mysql@v1
            - name: Start Postgres
              uses: ankane/setup-postgres@v1
              with:
                    database: testdb
            - name: Start Mongo
              uses: ankane/setup-mongodb@v1
            - name: Set up Test Data
              run: |
                    export PATH="${PATH}:/home/linuxbrew/.linuxbrew/bin"
                    cat ./src/MySQL/test/data/init.sql | mysql -B --user=root
                    cat ./src/MySQL/test/data/data.sql | mysql -B --user=test --password=testPassword test
                    psql -d testdb --file=./src/Postgres/test/data/init.sql
                    cat ./src/Mongo/test/data/init.mongo | mongosh --verbose
                    cat ./src/Mongo/test/data/data.mongo | mongosh --verbose -u test -p testPassword test
            - name: Build
              run: |
                    export PATH="${PATH}:/home/linuxbrew/.linuxbrew/bin"
                    ./configure --enable-dark-mode --with-magicenum-header-only-root=/home/linuxbrew/.linuxbrew/include --with-thorserialize-root=/home/linuxbrew/.linuxbrew/ --with-snappy-root=/home/linuxbrew/.linuxbrew/ --disable-test-with-postgres-auth --disable-test-with-mongo-query
                    make
    Build_on_Windows:
        runs-on:    windows-latest
        steps:
            - run:  git config --global core.autocrlf input
            - uses: actions/checkout@master
              with:
                    submodules: recursive
                    token: ${{ secrets.GITHUB_TOKEN }}
            - name: Install MSYS2
              uses: msys2/setup-msys2@v2
              with:
                install: >-
                    autoconf
                    automake
                    make
                    git
                    gperf
                    coreutils
                    vim
                    mingw-w64-x86_64-gcc
                    mingw-w64-x86_64-gdb
                    mingw-w64-x86_64-boost
                    mingw-w64-x86_64-libyaml
                    mingw-w64-x86_64-dlfcn
                    mingw-w64-x86_64-snappy
            - name: Start MySQL
              uses: ankane/setup-mysql@v1
              with:
                    database: testdb
            - name: Check Location of mysql
              run:  |
                    mysql -D testdb -e 'SELECT VERSION()'
                    where mysql
                    (get-command mysql).Path
                    get-command mysql
                    which mysql
            - name: Start Postgres
              uses: ankane/setup-postgres@v1
              with:
                    database: testdb
            - name: Check Location of psql
              run:  |
                    psql -d testdb -c 'SHOW server_version'
                    where psql
                    (get-command psql).Path
                    get-command psql
                    which psql
            - name: Start Mongo
              uses: ankane/setup-mongodb@v1
            - name: Check Location of mongo
              run:  |
                    mongo --eval "db.version()"
                    where mongo
                    (get-command mongo).Path
                    get-command mongo
                    which mongo
            - name: Set up Test Data
              run: |
                    cat ./src/MySQL/test/data/init.sql | mysql -B --user=root
                    cat ./src/MySQL/test/data/data.sql | mysql -B --user=test --password=testPassword test
                    psql -d testdb --file=./src/Postgres/test/data/init.sql
                    cat ./src/Mongo/test/data/init.mongo | mongo
                    cat ./src/Mongo/test/data/data.mongo | mongo -u test -p testPassword test
            - name: Clone Magic Enum
              shell: msys2 {0}
              run:   git clone https://github.com/Neargye/magic_enum.git /tmp/magic_enum
            - name: Clone ThorsSerializer
              shell: msys2 {0}
              run:   git clone --single-branch --branch header-only https://github.com/Loki-Astari/ThorsSerializer.git /tmp/ThorsSerializer
            - name: Configure
              shell: msys2 {0}
              env:
                     MSYS:  winsymlinks:nativestrict
              run:  |
                    PATH="${PATH}:/c/Program Files/MySQL/MySQL Server 8.0/bin/"
                    PATH="${PATH}:/c/Program Files/PostgreSQL/14/bin"
                    PATH="${PATH}:/c/Program Files/MongoDB/Server/5.0/bin/"
                    ./configure --with-mongosh-tool=mongo --disable-colour --disable-vera --with-magicenum-header-only-root=/tmp/magic_enum/include --with-thorserialize-header-only-root=/tmp/ThorsSerializer --with-yaml-root=/mingw64/ --disable-test-with-postgres-auth --disable-test-with-mongo-query
                    make

